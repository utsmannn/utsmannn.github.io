(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{86:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return b})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return d}));var n=a(3),l=a(7),r=(a(0),a(111)),o={title:"Routes"},b={unversionedId:"artifacts/routes-lib",id:"artifacts/routes-lib",isDocsHomePage:!1,title:"Routes",description:"You able to search route between two location.",source:"@site/docs/artifacts/routes-lib.md",slug:"/artifacts/routes-lib",permalink:"/geolib/docs/artifacts/routes-lib",editUrl:"https://github.com/utsmannn/geolib/blob/master/docs/docs/artifacts/routes-lib.md",version:"current",sidebar:"docs",previous:{title:"Location",permalink:"/geolib/docs/artifacts/location-lib"},next:{title:"Polyline",permalink:"/geolib/docs/artifacts/polyline-help"}},c=[{value:"Download",id:"download",children:[]},{value:"Create <code>PlaceRoute</code>",id:"create-placeroute",children:[]},{value:"Search route between locations",id:"search-route-between-locations",children:[{value:"Builder",id:"builder",children:[]},{value:"Route Data",id:"route-data",children:[]}]}],i={toc:c};function d(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"You able to search route between two location."),Object(r.b)("h2",{id:"download"},"Download"),Object(r.b)("p",null,Object(r.b)("img",{parentName:"p",src:"https://artifactory-badge.herokuapp.com/artifactory?url=https://utsmannn.jfrog.io/artifactory/android/com/utsman/geolib/location/",alt:null})),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"implementation 'com.utsman.geolib:routes:{last_version}'\n")),Object(r.b)("hr",null),Object(r.b)("h2",{id:"create-placeroute"},"Create ",Object(r.b)("inlineCode",{parentName:"h2"},"PlaceRoute")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"val placesRoute = createPlacesRoute(HERE_MAPS_API)\n")),Object(r.b)("h2",{id:"search-route-between-locations"},"Search route between locations"),Object(r.b)("p",null,"For search a route, use ",Object(r.b)("inlineCode",{parentName:"p"},"searchRoute")," DSL builder."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},'\nval buaran: Location = Location("").apply {\n    latitude = -6.2220484\n    longitude = 106.9217385\n}\n\nval depok: Location = Location("").apply {\n    latitude = -6.4090897\n    longitude = 106.8122967\n}\n\nval result: Result<RouteData> = placesRoute.searchRoute {\n    startLocation = buaran // location start\n    endLocation = depok // location end\n    transportMode = TransportMode.BIKE\n}\n\nresult.doOnSuccess { routes ->\n    // handle success\n}\n\nresult.doOnFailure {\n    // handler failure\n}\n\n')),Object(r.b)("hr",null),Object(r.b)("h3",{id:"builder"},"Builder"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Param"),Object(r.b)("th",{parentName:"tr",align:null},"type"),Object(r.b)("th",{parentName:"tr",align:null},"desc"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"startLocation")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"Location")),Object(r.b)("td",{parentName:"tr",align:null},"start destination")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"endLocation")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"Location")),Object(r.b)("td",{parentName:"tr",align:null},"end destination")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"transportMode")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"TransportMode")),Object(r.b)("td",{parentName:"tr",align:null},"transport mode, available ",Object(r.b)("inlineCode",{parentName:"td"},"CAR")," and ",Object(r.b)("inlineCode",{parentName:"td"},"BIKE"),", default is ",Object(r.b)("inlineCode",{parentName:"td"},"CAR"))))),Object(r.b)("h3",{id:"route-data"},"Route Data"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Param"),Object(r.b)("th",{parentName:"tr",align:null},"type"),Object(r.b)("th",{parentName:"tr",align:null},"desc"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"encodedPolyline")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"String")),Object(r.b)("td",{parentName:"tr",align:null},"encoded of geometry")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"geometries")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"List<LatLng>")),Object(r.b)("td",{parentName:"tr",align:null},"list LatLng of geometry")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"length")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"Float")),Object(r.b)("td",{parentName:"tr",align:null},"Length of polyline decoded")))),Object(r.b)("hr",null))}d.isMDXComponent=!0}}]);