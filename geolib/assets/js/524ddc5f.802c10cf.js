(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{114:function(e,r,t){"use strict";t.d(r,"a",(function(){return u})),t.d(r,"b",(function(){return d}));var a=t(0),n=t.n(a);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=n.a.createContext({}),m=function(e){var r=n.a.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},u=function(e){var r=m(e.components);return n.a.createElement(p.Provider,{value:r},e.children)},b={inlineCode:"code",wrapper:function(e){var r=e.children;return n.a.createElement(n.a.Fragment,{},r)}},s=n.a.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=m(t),s=a,d=u["".concat(o,".").concat(s)]||u[s]||b[s]||i;return t?n.a.createElement(d,l(l({ref:r},p),{},{components:t})):n.a.createElement(d,l({ref:r},p))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=s;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},85:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return o})),t.d(r,"metadata",(function(){return l})),t.d(r,"toc",(function(){return c})),t.d(r,"default",(function(){return m}));var a=t(3),n=t(7),i=(t(0),t(114)),o={title:"Marker"},l={unversionedId:"artifacts/marker-lib",id:"artifacts/marker-lib",isDocsHomePage:!1,title:"Marker",description:"Parse layout to original marker or you can create any view as marker. I added the layer for create any view as marker instead original marker.",source:"@site/docs/artifacts/marker-lib.md",slug:"/artifacts/marker-lib",permalink:"/geolib/docs/artifacts/marker-lib",editUrl:"https://github.com/utsmannn/geolib/blob/master/docs/docs/artifacts/marker-lib.md",version:"current",sidebar:"docs",previous:{title:"Polyline",permalink:"/geolib/docs/artifacts/polyline-help"}},c=[{value:"Download",id:"download",children:[]},{value:"Bitmap Marker",id:"bitmap-marker",children:[{value:"Create marker adapter",id:"create-marker-adapter",children:[]},{value:"Implement marker adapter",id:"implement-marker-adapter",children:[]}]},{value:"Any View Marker",id:"any-view-marker",children:[{value:"RESERVED",id:"reserved",children:[]}]}],p={toc:c};function m(e){var r=e.components,t=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,t,{components:r,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Parse layout to original marker or you can create any view as marker. I added the layer for create any view as marker instead original marker."),Object(i.b)("h2",{id:"download"},"Download"),Object(i.b)("p",null,Object(i.b)("img",{parentName:"p",src:"https://artifactory-badge.herokuapp.com/artifactory?url=https://utsmannn.jfrog.io/artifactory/android/com/utsman/geolib/location/",alt:null})),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"implementation 'com.utsman.geolib:marker:{last_version}'\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"bitmap-marker"},"Bitmap Marker"),Object(i.b)("p",null,"This marker is original from Google Maps SDK. But, you can create bitmap marker from xml layout."),Object(i.b)("h3",{id:"create-marker-adapter"},"Create marker adapter"),Object(i.b)("p",null,"Extend your adapter with ",Object(i.b)("inlineCode",{parentName:"p"},"MarkerBitmapAdapter()")," and implement methods."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"createView()")," (suspend)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"maxWidth()")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"maxHeight()"))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"class MarkerAdapter(private val context: Context) : MarkerBitmapAdapter() {\n    override suspend fun createView(): View {\n        return LayoutInflater.from(context).inflate(R.layout.marker_cat, null)\n    }\n\n    override fun maxWidth(): Int {\n        return 50.dp\n    }\n\n    override fun maxHeight(): Int {\n        return 70.dp\n    }\n}\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"CreateView()")," is setting up your view, inflate the xml to view and return to it. This function is suspend, so support the asynchronus function like load image from url."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"maxWidth()")," is max width for your marker in pixel."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"maxHeight()")," is max height for your marker in pixel."),Object(i.b)("h3",{id:"implement-marker-adapter"},"Implement marker adapter"),Object(i.b)("p",null,"From the adapter, you can get bitmap icon with ",Object(i.b)("inlineCode",{parentName:"p"},"getIconView()"),". "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"val iconBitmap = markerAdapter.getIconView()\nval melbourneLocation = LatLng(-37.813, 144.962)\nval melbourne = map.addMarker(\n    MarkerOptions()\n        .position(melbourneLocation)\n        .icon(iconBitmap)\n)\n")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"any-view-marker"},"Any View Marker"),Object(i.b)("p",null,"This feature is enabling posibility create any view (not bitmap) as a marker. But this marker is not original marker from Google Maps. If you create ",Object(i.b)("strong",{parentName:"p"},"animate marker")," with ",Object(i.b)("strong",{parentName:"p"},"gif")," file or ",Object(i.b)("strong",{parentName:"p"},"Lottie")," file, use this feature."),Object(i.b)("h3",{id:"reserved"},"RESERVED"),Object(i.b)("hr",null))}m.isMDXComponent=!0}}]);