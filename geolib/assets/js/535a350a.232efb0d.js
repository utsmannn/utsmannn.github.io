(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),d=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=d(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),u=d(n),s=a,m=u["".concat(l,".").concat(s)]||u[s]||p[s]||o;return n?r.a.createElement(m,c(c({ref:t},b),{},{components:n})):r.a.createElement(m,c({ref:t},b))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=s;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var b=2;b<o;b++)l[b]=n[b];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(7),o=(n(0),n(108)),l={title:"Routes"},c={unversionedId:"artifacts/routes-lib",id:"artifacts/routes-lib",isDocsHomePage:!1,title:"Routes",description:"You able to search route between two location.",source:"@site/docs/artifacts/routes-lib.md",slug:"/artifacts/routes-lib",permalink:"/geolib/docs/artifacts/routes-lib",editUrl:"https://github.com/utsmannn/geolib/blob/master/docs/docs/artifacts/routes-lib.md",version:"current",sidebar:"docs",previous:{title:"Location",permalink:"/geolib/docs/artifacts/location-lib"},next:{title:"Polyline",permalink:"/geolib/docs/artifacts/polyline-help"}},i=[{value:"Download",id:"download",children:[]},{value:"Create <code>PlaceRoute</code>",id:"create-placeroute",children:[]},{value:"Search route between locations",id:"search-route-between-locations",children:[{value:"Builder",id:"builder",children:[]},{value:"Route Data",id:"route-data",children:[]}]}],b={toc:i};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"You able to search route between two location."),Object(o.b)("h2",{id:"download"},"Download"),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"https://artifactory-badge.herokuapp.com/artifactory?url=https://utsmannn.jfrog.io/artifactory/android/com/utsman/geolib/location/",alt:null})),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"implementation 'com.utsman.geolib:routes:{last_version}'\n")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"create-placeroute"},"Create ",Object(o.b)("inlineCode",{parentName:"h2"},"PlaceRoute")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"val placesRoute = createPlacesRoute(HERE_MAPS_API)\n")),Object(o.b)("h2",{id:"search-route-between-locations"},"Search route between locations"),Object(o.b)("p",null,"For search a route, use ",Object(o.b)("inlineCode",{parentName:"p"},"searchRoute")," DSL builder."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},'\nval buaran: Location = Location("").apply {\n    latitude = -6.2220484\n    longitude = 106.9217385\n}\n\nval depok: Location = Location("").apply {\n    latitude = -6.4090897\n    longitude = 106.8122967\n}\n\nval result: Result<RouteData> = placesRoute.searchRoute {\n    startLocation = buaran // location start\n    endLocation = depok // location end\n    transportMode = TransportMode.BIKE\n}\n\nresult.doOnSuccess { routes ->\n    // handle success\n}\n\nresult.doOnFailure {\n    // handler failure\n}\n\n')),Object(o.b)("hr",null),Object(o.b)("h3",{id:"builder"},"Builder"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Param"),Object(o.b)("th",{parentName:"tr",align:null},"type"),Object(o.b)("th",{parentName:"tr",align:null},"desc"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"startLocation")),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"Location")),Object(o.b)("td",{parentName:"tr",align:null},"start destination")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"endLocation")),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"Location")),Object(o.b)("td",{parentName:"tr",align:null},"end destination")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"transportMode")),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"TransportMode")),Object(o.b)("td",{parentName:"tr",align:null},"transport mode, available ",Object(o.b)("inlineCode",{parentName:"td"},"CAR")," and ",Object(o.b)("inlineCode",{parentName:"td"},"BIKE"),", default is ",Object(o.b)("inlineCode",{parentName:"td"},"CAR"))))),Object(o.b)("h3",{id:"route-data"},"Route Data"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Param"),Object(o.b)("th",{parentName:"tr",align:null},"type"),Object(o.b)("th",{parentName:"tr",align:null},"desc"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"encodedPolyline")),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"String")),Object(o.b)("td",{parentName:"tr",align:null},"encoded of geometry")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"geometries")),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"List<LatLng>")),Object(o.b)("td",{parentName:"tr",align:null},"list LatLng of geometry")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"length")),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"Float")),Object(o.b)("td",{parentName:"tr",align:null},"Length of polyline decoded")))),Object(o.b)("hr",null))}d.isMDXComponent=!0}}]);